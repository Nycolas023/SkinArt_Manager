--CREATE DATABASE SKINART

USE SKINART;

GO

CREATE TABLE USUARIO (
	ID_USUARIO INT PRIMARY KEY IDENTITY(1,1),
	NOME_USUARIO VARCHAR(200) NOT NULL,
	SOBRENOME_USUARIO VARCHAR(200) NOT NULL,
	DATA_NASC_USUARIO DATE NOT NULL,
	CPF_USUARIO VARCHAR(14) UNIQUE NOT NULL,
	RG_USUARIO VARCHAR(15) NOT NULL,
	LOGIN_USUARIO VARCHAR(200) UNIQUE NOT NULL,
	SENHA_USUARIO VARCHAR(200) NOT NULL,
	STATUS_USUARIO VARCHAR(40)NOT NULL DEFAULT 'INATIVO',
	ULTIMO_LOGIN DATE
);
GO

CREATE TABLE PAPEL (
	ID_PAPEL INT PRIMARY KEY IDENTITY(1,1),
	NOME_PAPEL VARCHAR(50) NOT NULL 
);
GO

CREATE TABLE USUARIO_PAPEL (
	ID_USUARIO INT NOT NULL,
	ID_PAPEL INT NOT NULL,
	PRIMARY KEY (ID_USUARIO, ID_PAPEL),
	FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
	FOREIGN KEY (ID_PAPEL) REFERENCES PAPEL(ID_PAPEL)
);
GO

CREATE TABLE TATUADOR (
	ID_USUARIO INT PRIMARY KEY,
	DESCRICAO_TATUADOR VARCHAR(500) NOT NULL,
	CNAE_FORMACAO_TATUADOR VARCHAR(100) NOT NULL,
	FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO)
);
GO

CREATE TABLE ARTE_TATUADOR (
	ID_ARTE_TATUADOR INT PRIMARY KEY IDENTITY(1,1),
	ID_TATUADOR INT NOT NULL,
	IMAGEM_PATH_ARTE_TATUADOR VARCHAR(300) NOT NULL,
	DESC_ARTE_TATUADOR VARCHAR(200),
	FOREIGN KEY (ID_TATUADOR) REFERENCES TATUADOR(ID_USUARIO)
);
GO

CREATE TABLE AGENDAMENTO (
	ID_AGENDAMENTO INT PRIMARY KEY IDENTITY(1,1),
	DATA_AGENDAMENTO DATE NOT NULL,
	HORA_AGENDAMENTO TIME NOT NULL,
	ID_TATUADOR INT NOT NULL,
	FOREIGN KEY (ID_TATUADOR) REFERENCES TATUADOR(ID_USUARIO)
);
GO

CREATE TABLE STATUS_PAGAMENTO (
	ID_STATUS_PAGAMENTO INT PRIMARY KEY IDENTITY(1,1),
	STATUS_PAGAMENTO VARCHAR(20) NOT NULL
);
GO

CREATE TABLE PAGAMENTO (
	ID_PAGAMENTO INT PRIMARY KEY IDENTITY(1,1),
	TIPO_PAGAMENTO VARCHAR(30) NOT NULL,
	DATA_PAGAMENTO DATE NOT NULL,
	HORA_PAGAMENTO TIME NOT NULL,
	PARCELAMENTO_PAGAMENTO TINYINT,
	ID_STATUS_PAGAMENTO INT NOT NULL,
	ID_TATUADOR INT NOT NULL,
	FOREIGN KEY (ID_STATUS_PAGAMENTO) REFERENCES STATUS_PAGAMENTO(ID_STATUS_PAGAMENTO),
	FOREIGN KEY (ID_TATUADOR) REFERENCES TATUADOR(ID_USUARIO)
);
GO

--CREATE TABLE SALARIO (
--	ID_SALARIO INT PRIMARY KEY IDENTITY(1,1),
--	ID_TATUADOR INT NOT NULL,
--	VALOR_SALARIO DECIMAL(10,2) NOT NULL,
--	DATA_CAIMENTO_SALARIO DATE NOT NULL,
--	FOREIGN KEY (ID_TATUADOR) REFERENCES TATUADOR(ID_USUARIO)
--);
--GO



--============================== INSERT TESTE ==================================

INSERT INTO USUARIO (
	NOME_USUARIO, SOBRENOME_USUARIO, DATA_NASC_USUARIO, CPF_USUARIO,
	RG_USUARIO, LOGIN_USUARIO, SENHA_USUARIO
) VALUES (
	'João', 'Silva', '1990-05-15', '123.456.789-00',
	'12.345.678-9', 'joao.silva', 'senha123'
);

INSERT INTO PAPEL (NOME_PAPEL) VALUES ('Tatuador');
INSERT INTO PAPEL (NOME_PAPEL) VALUES ('Admin');

INSERT INTO USUARIO_PAPEL (ID_USUARIO, ID_PAPEL) VALUES (1, 1); -- Tatuador
INSERT INTO USUARIO_PAPEL (ID_USUARIO, ID_PAPEL) VALUES (1, 2); -- Admin

INSERT INTO TATUADOR (
	ID_USUARIO, DESCRICAO_TATUADOR, CNAE_FORMACAO_TATUADOR
) VALUES (
	1, 'Especialista em tatuagem realista', '9602501'
);

INSERT INTO ARTE_TATUADOR (
	ID_TATUADOR, IMAGEM_PATH_ARTE_TATUADOR, DESC_ARTE_TATUADOR
) VALUES (
	1, 'imagens/arte_dragon.png', 'Dragão japonês em estilo realista'
);

INSERT INTO STATUS_PAGAMENTO (STATUS_PAGAMENTO) VALUES ('Pendente');
INSERT INTO STATUS_PAGAMENTO (STATUS_PAGAMENTO) VALUES ('Pago');

--INSERT INTO PAGAMENTO (
--	TIPO_PAGAMENTO, DATA_PAGAMENTO, HORA_PAGAMENTO, PARCELAMENTO_PAGAMENTO,
--	ID_STATUS_PAGAMENTO, ID_TATUADOR
--) VALUES (
--	'Cartão de Crédito', '2025-06-24', '15:30:00', 3,
--	2, -- 'Pago'
--	1
--);


--DROP TABLE IF EXISTS PAGAMENTO;
--DROP TABLE IF EXISTS SALARIO;
--DROP TABLE IF EXISTS ARTE_TATUADOR;
--DROP TABLE IF EXISTS AGENDAMENTO;
--DROP TABLE IF EXISTS STATUS_PAGAMENTO;
--DROP TABLE IF EXISTS TATUADOR;
--DROP TABLE IF EXISTS ADMIN_SISTEMA;
--DROP TABLE IF EXISTS USUARIO_PAPEL;
--DROP TABLE IF EXISTS PAPEL;
--DROP TABLE IF EXISTS USUARIO

GO

--==================================== PROCEDURES ===================================

CREATE PROCEDURE STP_LOGIN_ADMIN
	@LOGIN VARCHAR(200),
	@SENHA VARCHAR(200)
AS
BEGIN
	IF EXISTS (
		SELECT 1
		FROM USUARIO U
		JOIN USUARIO_PAPEL UP ON UP.ID_USUARIO = U.ID_USUARIO
		JOIN PAPEL P ON P.ID_PAPEL = UP.ID_PAPEL
		WHERE U.LOGIN_USUARIO = @LOGIN AND U.SENHA_USUARIO = @SENHA
		AND P.NOME_PAPEL = 'ADMIN'
	)
	BEGIN
		SELECT TOP 1
			U.*, P.NOME_PAPEL
		FROM USUARIO U
		JOIN USUARIO_PAPEL UP ON UP.ID_USUARIO = U.ID_USUARIO
		JOIN PAPEL P ON P.ID_PAPEL = UP.ID_PAPEL
		WHERE U.LOGIN_USUARIO = @LOGIN AND U.SENHA_USUARIO = @SENHA
		AND P.NOME_PAPEL = 'ADMIN';

		UPDATE USUARIO
		SET ULTIMO_LOGIN = CAST(GETDATE() AS DATE)
		WHERE LOGIN_USUARIO = @LOGIN AND SENHA_USUARIO = @SENHA;
	END
END;

GO

CREATE PROCEDURE STP_LOGIN_TATUADOR
	@LOGIN VARCHAR(200),
	@SENHA VARCHAR(200)
AS
BEGIN
	IF EXISTS (
		SELECT 1
		FROM USUARIO U
		JOIN USUARIO_PAPEL UP ON UP.ID_USUARIO = U.ID_USUARIO
		JOIN PAPEL P ON P.ID_PAPEL = UP.ID_PAPEL
		WHERE U.LOGIN_USUARIO = @LOGIN AND U.SENHA_USUARIO = @SENHA
		AND P.NOME_PAPEL = 'TATUADOR'
	)
	BEGIN
		SELECT TOP 1
			U.*, P.NOME_PAPEL
		FROM USUARIO U
		JOIN USUARIO_PAPEL UP ON UP.ID_USUARIO = U.ID_USUARIO
		JOIN PAPEL P ON P.ID_PAPEL = UP.ID_PAPEL
		WHERE U.LOGIN_USUARIO = @LOGIN AND U.SENHA_USUARIO = @SENHA
		AND P.NOME_PAPEL = 'TATUADOR';

		UPDATE USUARIO
		SET ULTIMO_LOGIN = CAST(GETDATE() AS DATE)
		WHERE LOGIN_USUARIO = @LOGIN AND SENHA_USUARIO = @SENHA;
	END
END;

GO

CREATE PROCEDURE STP_DELETA_USUARIO
	@ID_USUARIO INT
AS
BEGIN
	DELETE FROM PAGAMENTO
	WHERE ID_TATUADOR = @ID_USUARIO;

	DELETE FROM AGENDAMENTO
	WHERE ID_TATUADOR = @ID_USUARIO;

	DELETE FROM ARTE_TATUADOR
	WHERE ID_TATUADOR = @ID_USUARIO;

	DELETE FROM TATUADOR
	WHERE ID_USUARIO = @ID_USUARIO;

	DELETE FROM USUARIO_PAPEL
	WHERE ID_USUARIO = @ID_USUARIO;

	DELETE FROM USUARIO
	WHERE ID_USUARIO = @ID_USUARIO;
END

GO

CREATE PROCEDURE STP_ATUALIZA_USUARIO
	@ID_USUARIO INT,
	@NOME_USUARIO VARCHAR(200),
	@SOBRENOME_USUARIO VARCHAR(200),
	@DATA_NASC_USUARIO DATE,
	@CPF_USUARIO VARCHAR(14),
	@RG_USUARIO VARCHAR(15),
	@LOGIN_USUARIO VARCHAR(200),
	@SENHA_USUARIO VARCHAR(200)
AS
BEGIN
	UPDATE USUARIO
	SET 
		NOME_USUARIO = @NOME_USUARIO,
		SOBRENOME_USUARIO = @SOBRENOME_USUARIO,
		DATA_NASC_USUARIO = @DATA_NASC_USUARIO,
		CPF_USUARIO = @CPF_USUARIO,
		RG_USUARIO = @RG_USUARIO,
		LOGIN_USUARIO = @LOGIN_USUARIO,
		SENHA_USUARIO = @SENHA_USUARIO
	WHERE ID_USUARIO = @ID_USUARIO;
END;



CREATE PROCEDURE STP_CRIAR_USUARIO
	@NOME VARCHAR (200),
	@SOBRENOME VARCHAR (200),
	@CPF VARCHAR(14),
	@RG VARCHAR(15),
	@DATA_NASC DATE,
	@LOGIN VARCHAR(200),
	@SENHA VARCHAR(200)
AS
BEGIN
	-- Verifica se já existe um CPF cadastrado
	IF EXISTS (SELECT 1 FROM USUARIO WHERE CPF_USUARIO = @CPF)
	BEGIN
		RAISERROR('CPF já cadastrado.', 16, 1);
		RETURN;
	END

	-- Se passou, insere o novo usuário
	INSERT INTO USUARIO (
		NOME_USUARIO, SOBRENOME_USUARIO, DATA_NASC_USUARIO,
		CPF_USUARIO, RG_USUARIO, LOGIN_USUARIO, SENHA_USUARIO
	)
	VALUES (
		@NOME, @SOBRENOME, @DATA_NASC,
		@CPF, @RG, @LOGIN, @SENHA
	)

	-- Retorna o usuário recém-criado
	SELECT * FROM USUARIO WHERE ID_USUARIO = SCOPE_IDENTITY();
END



--EXEC STP_LOGIN 'joao.silva', 'senha123'
--EXEC STP_RETORNA_FUNCIONALIDADES_USUARIO 1
--EXEC STP_DELETA_USUARIO 2
--EXEC sp_atualizar_usuario 
--	@ID_USUARIO = 1,
--	@NOME_USUARIO = 'Carlos',
--	@SOBRENOME_USUARIO = 'Moraes',
--	@DATA_NASC_USUARIO = '1991-01-01',
--	@CPF_USUARIO = '123.456.789-00',
--	@RG_USUARIO = '12.345.678-9',
--	@LOGIN_USUARIO = 'carlos.m',
--	@SENHA_USUARIO = 'novasenha456';
